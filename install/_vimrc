" My own vim config
" dannygodii@gmail.com

set nocompatible

" Tab relatived
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab


" Indent related
set cindent
set cinoptions=t0N-s(0j1
if v:version > 800
  set breakindent
endif
set cinkeys-=0#
set indentkeys-=0#


" Editing related
set backspace=indent,eol,start


" Encoding related
set ambiwidth=double
set fileformat=unix
set encoding=utf-8
set langmenu=zh_CN.utf-8
set fileencodings=utf-8,chinese,latin-1
if has("win32")
  set fileencoding=chinese
else
  set fileencoding=utf-8
endif
"fix menu encoding issue
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim
"console encoding
language messages zh_CN


" File type related
filetype plugin indent on
"filetype plugin on


" Display related
set ru
set nu
set showcmd
set hlsearch 
set incsearch
colorscheme torte
syntax on

if v:version >= 900
  hi Search guifg=#ff0000 guibg=#000000 gui=reverse,bold ctermfg=Red ctermbg=Black cterm=reverse,bold
  hi PmenuSel guifg=#000000 guibg=#ff00ff gui=bold ctermfg=16 ctermbg=13 cterm=bold
  hi Visual guifg=#a9a9a9 guibg=#000000 gui=reverse,bold ctermfg=248 ctermbg=16 cterm=reverse,bold
  hi! link CurSearch Search
endif


" Window pos & size
if (has("gui_running"))
  set lines=60 columns=150
  if (has("mac") != 1)
    winpos 170 60
  endif
endif


" Gui settings
if (has("win32"))
  if (has("gui_running"))
    set guifont=Bitstream_Vera_Sans_Mono:h10:cANSI
  endif
elseif (has("mac"))
  if (has("gui_running"))
    set guifont=Monaco:h12:cANSI
  endif
endif


" Shell settings
if (has("gui_macvim"))
  set shell=bash
endif


" *.swp file settings
if (has("win32"))
  set directory=%TEMP%//,.
else
  set directory=/tmp//,.
endif


"=============================================================================
" Plugin settings
"=============================================================================
"a.vim 快速切换头和源文件
nnoremap <silent> <F12> :A<CR>

"EasyGrep.vim
nnoremap <F3> :Grep<space>
let g:EasyGrepAllOptionsInExplorer = 1
let g:EasyGrepRecursive = 1
let g:EasyGrepSearchCurrentBufferDir = 0
let g:EasyGrepFilesToExclude = '*.bak,*~,.svn/*,.git/*'
let g:EasyGrepDefaultUserPattern = '*.gypi *.gyp'

"cscopes使用
function UpdateCscope()
  cs kill 0
  if (has("win32"))
    silent! execute "!dir *.cpp *.h *.hpp *.c *.java *.cc /s /B > tmplist"
  else
    silent! execute "!find -name '*.c' -o -name '*.cpp' -o -name '*.cc' -o -name '*.h' -o -name '*.hpp' -o -name '*.java' -type f > tmplist"
  endif
  silent! execute "!cscope -bqk -i tmplist"
  silent! execute "!ctags -R -L tmplist"
  if (has("win32"))
    silent! execute "!del tmplist"
  else
    silent! execute "!rm -f tmplist"
  endif
  cs add cscope.out
endfunction
map <C-F10>c :call UpdateCscope() <CR>


" Clang format
if has("win32")
  " work in normal & virsual mode
  map <C-F> :%pyf $VIM/vimfiles/clang-format.py<CR>
  " work in insert mode
  "imap <C-F> <ESC>:pyf $VIM/vimfiles/clang-format.py<CR>i
else
  map <C-F> :%pyf $HOME/.vim/clang-format.py<CR>
  "imap <C-F> <ESC>:pyf $HOME/.vim/clang-format.py<CR>i
endif


" Format Code
"function FormatCode()
"    silent! execute "%!astyle --ascii --style=allman --indent=spaces=4 --indent-classes --indent-switches --indent-cases --indent-preproc-define --indent-col1-comments --min-conditional-indent=0 --max-instatement-indent=60 --break-blocks --pad-oper --pad-header --align-pointer=middle --align-reference=type --add-brackets --convert-tabs --lineend=linux"
"endfunction
"map <C-S-F> :call FormatCode() <CR>


" Diff
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      if empty(&shellxquote)
        let l:shxq_sav = ''
        set shellxquote&
      endif
      let cmd = '"' . $VIMRUNTIME . '\diff"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '! ' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
  if exists('l:shxq_sav')
    let &shellxquote=l:shxq_sav
  endif
endfunction

"""""""""""""""""""""""""""""""""
"abandon plusin
""TList plugin
"let Tlist_Show_One_File=1
""let Tlist_Exit_OnlyWindow=1
""winmanager
"let g:winManagerWindowLayout='FileExplorer|TagList'
""nmap !m :WMToggle<cr>
